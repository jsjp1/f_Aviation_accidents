plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

// def flutterCompileSdkVersion = localProperties.getProperty('flutter.flutterCompileSdkVersion')
// if(flutterCompileSdkVersion == null){
//     flutterCompileSdkVersion = '34'
// }
// def flutterTargetSdkVersion = localProperties.getProperty('flutter.flutterTargetSdkVersion')
// if (flutterTargetSdkVersion == null) {
//     flutterTargetSdkVersion = '34'
// }
// def flutterMinSdkVersion = localProperties.getProperty('flutter.flutterMinSdkVersion')
// if (flutterMinSdkVersion == null) {
//     flutterMinSdkVersion = '23'
// }

android {
    namespace = "com.ellipsoid.avcc"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.ellipsoid.avcc"
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}
